export default {
    name: 'English',
    message: {
        run: 'Run',
        save: 'Save',
        search: 'Search',
        upload: 'Upload',
        export: 'Export',
        push: 'Push',
        skin: 'Skin',
        reload: 'reload all resources',
        copy: 'Copy',
        searchText: 'Enter keywords to search',
        required: 'Required',
        defaultValue: 'Default Value',
        description: 'Description',
        parameterType: 'Parameter Type',
        view: 'View',
        addRow: 'Add Row',
        removeRow: 'Remove Row',
        all: 'All',
        clear: 'Clear',
        empty: '{0} is empty.',
        type: 'Type',
        date: 'Date',
        name: 'Name',
        group: '{0} Group',
        i18n: 'Language',
        tips: 'Tips',
        ok: 'OK',
        refresh: 'Refresh',
        loading: 'Loading...',
        nodata: 'no data.',
        cancel: 'Cancel',
        update: 'Update',
        create: 'Create',
        username: 'Username',
        password: 'Password',
        createDataSource: 'Create {0}',
        chooseFile: 'Please Choose File',
        expand: 'Expand',
        collapse: 'Collapse',
        selectAll: 'Select All',
        deselectAll: 'Deselect All',
        hide: 'Hide',
        login: 'Login',
        ignore: 'Ignore',
        document: 'Document',
        joinGroup: 'Join QQ Group',
        untitled: 'Untitled',
        log: 'Log',
        enable: 'Enable',
        variable: 'Variable Info',
        move: 'Move',

        switchLocale: 'Switch Language To {0}, It work at after refreshing the page, Do you want to Refresh the page ?',
        loadClass: 'Load Classes...',
        loadClassError: 'Failed Load Classes',
        switchSkin: 'Switch Skin To「{0}」',
        loadClassFinish: 'Class Loaded',
        tryAutoLogin: 'Try Auto Login',
        autoLoginSuccess: 'Auto Login Success',
        getCurrentLoginUser: 'Load Current Logined User',
        getResource: 'Load {0} Resources',
        getResourceFinish: '{0} Resources Loaded',
        connectDebugServer: 'Debug Server Connecting...',
        debugServerClose: 'Debug Server Disconnected',
        connectDebugServerSuccess: 'Connect Debug Server Success',
        reloadResourceSuccess: 'Resource Reload Success',

        getDetail: 'Load {0} Detail',
        getDetailSuccess: 'Load {0} Detail Success',

        lockSuccess: 'Lock {0} Success',
        lockFailed: 'Failed to Lock {0}',
        unlockSuccess: 'UnLock {0} Success',
        unlockFailed: 'Failed to UnLock {0}',
        updateTips: 'Update {0}',
        saveSuccess: 'Save {0} Success',
        saveFailed: 'Failed to Save {0}',

        newVersionRelease: 'New Version {0} available',
        versionLastest: 'Current Version is Lastese',
        versionUpdate: 'New Version {0} available<br>Do you want Upgrade?',
        changelog: 'CHANGELOG',
        versionConflict: 'Version does not matched frontend: {0}, backend: {1}, Please Check!',
        versionCheck: 'Version Check',
        loadConfigError: 'Failed to load configuration',
        logout: 'Logout',
        logoutSuccess: 'Logout Success',
        logoutConfirm: 'Are you sure Logout {0} ?',
        deleteConfirm: 'Do you want Delete {0}',
        deleteSuccess: 'Delete {0} Success',
        deleteFailed: 'Failed to Delete {0}',
        deleteTips: 'Delete {0}',

        remote: 'Remote',
        secret: 'Secret',
        exported: 'The selected resource has been exported',
        exportNoneSelect: 'Please select and then export',
        pushNoneSelect: 'Please select and then push',

        responseBody: 'Body',
        responseHeader: 'Header',
        responseStructure: 'Structure',
        root: 'Root',
        pushWarning: 'When the full mode is pushed, the local data shall prevail and the full coverage update will be carried out. Do you want to continue?',
        uploadWarning: 'When uploading in full mode, the overwrite update operation is performed based on the uploaded data, and other interfaces may be deleted.<br>In the case of partial export, it is recommended to use incremental update. Do you want to continue?',

        noValidate: 'No Validate',
        validatePattern: 'Regex attern',
        validateExpression: 'Expression'
    },
    plugin: {
        loading: 'Load plugin 「{0}」',
        loaded: 'Plugin「{0}」 Loaded',
        loadFailed: 'Failed to load plugin「{0}」'
    },
    resource: {
        createGroup: 'Create Group',
        updateGroup: 'Update Group',
        copyGroup: 'Copy Group',
        deleteGroupConfirm: 'Do you want Delete {0} Group「{1}」?',
        deleteGroupSuccess: 'Delete {0} Group「{1}」Success',
        deleteGroupFailed: 'Failed to Delete {0} Group 「{1}」',
        groupExport: 'Group「{0}」\'s {1} Exported',
        move: 'Do you want to move「{0}」?',
        moveGroup: 'Move Group',
        moveRootGroupConfirm: 'Do you want to move Group 「{0}」into root?',
        moveRootSuccess: 'Move {0} Group 「{1}」into root Success',
        moveRootFailed: 'Failed to Move {0} Group「{1}」 into root',
        moveGroupSuccess: 'Move {0} Group 「{1}」 Success',
        moveGroupFailed: 'Failed to Move {0} Group 「{1}」',
        moveFileSuccess: 'Move {0} Success',
        moveResourceFailed: 'Failed to Move {0}',
        saveGroupSuccess: 'Save {0} Group {1}」 Success',
        saveGroupFailed: 'Failed to Save {0} Group 「{1}」',
        copyPathSuccess: 'Copy {0} Path {1}」 Success',
        copyPathFailed: 'Failed to Copy {0} Path 「{1}」',
        copyRelativePathSuccess: 'Copy {0} Relative Path 「{1}」 Success',
        copyRelativePathFailed: 'Failed to Copy {0} Relative Path 「{1}」',
        contextmenu: {
            copy: 'Copy {0}',
            copyWithPath: 'Copy Absolute Path',
            copyRelativePath: 'Copy Relative Path',
            lock: 'Lock',
            unlock: 'UnLock',
            delete: 'Delete',
            newFile: 'New {0}',
            deleteGroup: 'Delete Group',
            exportGroup: 'Export Group',
            moveToRoot: 'Move To Root'
        },
        header: {
            expand: 'Expand All',
            collapse: 'Collapse All',
            asc: 'Ascending',
            desc: 'Descending',
            position: 'Select Opened File'
        },
        form: {
            groupName: 'Group Name',
            groupPath: 'Group Path',
            placeholder: {
                name: 'Please Enter {0} Group Name',
                path: 'Please Enter {0} Group Path'
            }
        }
    },
    editor: {
        tab: {
            close: 'Close',
            closeOther: 'Close Other Tabs',
            closeLeft: 'Close Tabs to the Left',
            closeRight: 'Close Tabs to the Right',
            closeAll: 'Close All Tabs',
        },
        tooltip: {
            complection: 'Trigger Suggest',
            resume: 'Resume Breakpoint',
            stepInto: 'Step Into',
            format: 'Reformat Code',
            recent: 'Recent Opened Files'
        },
        triggerSuggest: 'Trigger Suggest'
    },
    api: {
        title: 'Api Info',
        name: 'Api',
        form: {
            method: 'Method',
            name: 'Name',
            path: 'Path',
            placeholder: {
                name: 'Please Enter Api Name',
                path: 'Please Enter Api Path'
            }
        },
        navbars: {
            parameter: 'Parameters',
            header: 'Headers',
            path: 'PathVariables',
            body: 'Body',
            option: 'Options',
            description: 'Descriptions',
            groupOption: 'Group Options'
        },
        validateType: 'Validate Type',
        expression: 'Expression or Regex Pattern',
        validate: 'Validate Description',
        field: 'Field',
        test: {
            requestBodyError: 'RequestBody Has Error, please check!',
            missPath: 'Please enter PathVariable',
            requestError: 'Failed to send Request「{0}」',
            success: '「{0}」Request finish, Status:<em>{1}</em> Size:<em>{2}</em> Time：<em>{3} ms</em>',
            begin: 'Start Request For「{0}」'
        },
        structure: {
            content: '{0} Structure has changed, Do you wang to change？',
            ok: 'Change',
        }
    },
    datasource: {
        title: 'DataSource',
        name: 'DataSource',
        copySuccess: 'Copy {0} Success',
        copyFailed: 'Failed to Copy {0}',
        test: 'Test',
        connected: 'Connected',
        connectFailed: 'Failed to Connect, Reason:\r\n{0}',
        primary: 'Primary',
        form: {
            placeholder: {
                name: 'DataSource Name, Only Display Use',
                key: 'DataSource Key, Required',
                url: 'Please Enter jdbcURL，eg: jdbc:mysql://localhost/dbname',
                username: 'Please Enter Database username, Optional',
                password: 'Please Enter Database password, Optional',
                driver: 'DriverClass, Optional',
                type: 'Pool Type, Optional',
                maxRows: 'Max Return Rows'
            },
            driver: 'Driver',
            type: 'Type',
            other: 'Others'
        }
    },
    fn: {
        title: 'Function Info',
        name: 'Function',
        number: 'Nunmber',
        string: 'String',
        collection: 'Collection',
        returnValue: 'Return Types',
        parameter: 'Function Parameters',
        description: 'Function Description',
        form: {
            name: 'Name',
            path: 'Path',
            placeholder: {
                name: 'Please Enter Function Name',
                path: 'Please Enter Function Path'
            }
        }
    },
    toolbars: {
        debug: 'Debug',
        log: 'Run Log',
        history: 'History',
        event: 'Event',
        global: 'Global Parameters',
        response: 'Response',
        viewHistory: 'History:{0}'
    },
    event: {
        message: 'Message'
    },
    history: {
        name: 'History',
        operator: 'Operators'
    },
    upload: {
        full: 'Full Upload',
        increment: 'Increment Upload',
        success: '{0} Success',
        failed: 'Failed to {0}'
    },
    push: {
        full: 'Full Push',
        increment: 'Increment Push',
        success: '{0} Success',
        failed: 'Failed to {0}'
    },
    backup:{
        full: 'Full Backup',
        backupSuccess: 'Full Backup Success',
        rollback: 'Rollback',
        current: 'Current',
        difference: 'Difference',
        rollbackSuccess: 'Rollback {0} Success',
        rollbackFailed: 'Failed to Rollback {0}',
        rollbackConfirm: 'this operation will overview current resources, Do you want to continue?'
    },
    online: {
        login: 'User Login',
        loginTips: 'User {0} Login, IP: {1}',
        logout: 'User Logout',
        logoutTips: 'User {0} Logout, IP: {1}',
        onlines: 'Online: {0}'
    },
    log: {
        hide: 'Click to hide multiline log',
        show: '{0} lines of log are hidden, Click to show',
        scrollEnd: 'Scroll to End'
    },
    code: {
        'error': 'Error({0})',
        'invalid': 'Error,HttpStatus({0})',
        'httpError': 'Error',
        '-2': 'Current is Readonly, Cannot be Operated',
        '-10': 'Unauthorized Operation',
        '1001': 'Group Not Found',
        '1002': 'Not Support the Group Type',
        '1003': 'Remote Cannot be empty',
        '1004': 'secretKey Cannot be empty',
        '1005': 'The name will repeat after moving. Please modify the name and try again.',
        '1006': 'Source object and grouping cannot be consistent',
        '1007': 'Resoirce Not Found',
        '1008': 'The current resource has been locked. Please operate after unlocking',
        '1009': 'This path has been used. Please try another path',
        '1010': 'There are conflicts in resource [{0}], please check',
        '1011': 'The path will conflict after moving. Please try another path',
        '1012': 'Request Method Cannot be empty',
        '1013': 'Reqeust Path Cannot be empty',
        '1014': 'Function Path Cannot be empty',
        '1015': 'The configured file path does not exist, please check',
        '1016': 'The Api [{0} ({1})] conflicts with the application and cannot be registered',
        '1017': 'Script Cannot be empty',
        '1018': 'Name Cannot be empty',
        '1019': 'Path Cannot be empty',
        '1020': 'jdbcURL Cannot be empty',
        '1021': 'key Cannot be empty',
        '1022': 'The data source key has been used. Please replace it and try again',
        '1023': 'Please Choose Group',
        '1024': 'Cron Expression Cannot be empty',
        '1025': 'The name cannot contain special characters. Only Chinese, numbers, letters and +-.() and . cannot be start',
        '1026': 'The data source key cannot contain special characters, only Chinese, numbers, letters, _',
        '1027': 'Failed to save. The group name under the same group cannot be duplicate and cannot contain special characters.',
        '1028': 'Parameter validation failed',
        '1029': 'Header validation failed',
        '1030': 'PathVariable validation failed',
        '1031': 'RequestBody validation failed',
        '1032': 'Please Upload File',
        '1033': 'Failed to validate Signature. Please check whether the secret key is correct',
        '1034': 'Backup is not enabled and cannot be operated',
        '1035': 'Api Not Found'
    }

}
